{"version":3,"sources":["footprint.svg","ladder.svg","logo.svg","shuffle.svg","hide.svg","Figur.js","Brett.js","Aktion.js","messages.js","FarbEingabe.js","AltersEingabe.js","Gewinner.js","AktuellerSpieler.js","Spiel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Figur","props","react_default","a","createElement","width","height","xmlns","transform","stroke","id","d","strokeOpacity","strokeWidth","fill","farbe","css","Brett","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","hoehe","breite","spieler","zeilen","zeile","spalten","_loop","spalte","gerade","position","borderRadius","padding","push","style","border","backgroundColor","textAlign","display","alignItems","justifyContent","filter","s","map","marginTop","borderCollapse","React","Component","Aktion","_this","call","state","ausgefuehrt","aktion","aufdeckenFunktion","spielzugFunktion","aufgedeckt","setState","setTimeout","Fragment","onClick","aufdecken","bind","cx","cy","r","logo","MSG","concat","name","FarbEingabe","farben","setzeSpielerFarbe","AltersEingabe","zahlen","setzeSpielerAlter","zahl","x","y","textAnchor","Gewinner","gewinner","AktuellerSpieler","speech","Speech","hasBrowserSupport","console","log","init","then","data","catch","e","error","Spiel","play","gestartet","anzahlSpieler","aktionen","aktuellerSpieler","aktuelleAktion","vorleseText","spielzug","assertThisInitialized","index","alter","_this2","shuffle","i","length","j","Math","floor","random","_ref","leiterSprosse","xlinkHref","footprint","schrittAktion","boardAktion","shuffleIcon","forEach","hide","ladder","gewinnerFeld","_this3","_this$state","say","positionVorher","ermittleGewinner","naechsterSpielerId","tmp","toConsumableArray","msg","queue","speak","text","element","spielerMitEingabe","_this$state2","indexOf","item","starten","spielerDatenEingegeben","_this4","_this$state3","aktionenListe","Aktion_Aktion","Array","keys","slice","alignmentBaseline","fontSize","onChange","event","target","type","defaultValue","starteSpiel","marginLeft","marginRight","Brett_Brett","App","className","src","alt","src_Spiel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76217aa5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/footprint.eb70ae80.svg\";","module.exports = __webpack_public_path__ + \"static/media/ladder.11938bf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/shuffle.6fa37654.svg\";","module.exports = __webpack_public_path__ + \"static/media/hide.b3773190.svg\";","import React from 'react';\r\nexport function Figur(props) {\r\n    return (<svg width=\"50\" height=\"60\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g transform=\"scale(0.4)\">\r\n            <path stroke=\"#000\" id=\"svg_2\" d=\"m35.656537,144.628765c-5.040612,1.192835 -8.927045,-6.789081 -2.677031,-7.657376c5.499756,0.109546 -1.367755,-5.673337 3.596445,-7.621313c5.710154,-5.870561 11.37392,-11.992479 15.03341,-19.548688c-1.843831,-2.575478 -4.886873,-5.03615 -4.489256,-8.560295c3.58918,-1.287359 8.936022,-0.41482 9.148628,-6.383134c3.263968,-10.772194 4.134543,-22.161649 4.850022,-33.381962c-3.602047,-3.008049 -11.01954,-0.158432 -16.053465,-1.6906c-7.636643,-2.171829 2.847697,-6.329909 6.210647,-5.987319c3.021748,0.004776 7.496195,-1.957058 2.438533,-3.45643c4.266482,-0.207408 10.40293,-5.908452 3.386764,-7.963467c5.201643,-3.934108 1.193461,-12.4953 -0.978426,-17.418766c-3.274158,-5.945326 -8.658135,-10.25118 -14.743558,-12.547248c-0.985249,-6.062663 8.397983,-4.270759 12.203884,-4.585381c5.762915,0.231563 11.639323,-0.072553 16.660268,-3.377938c6.78392,-3.30652 12.551089,2.211903 18.756819,3.378432c6.277041,0.425853 12.80655,-1.189635 18.91849,0.683785c1.893779,1.419105 5.042104,3.660548 1.250431,4.73625c-7.241405,4.246257 -14.004013,10.519185 -15.819284,19.42998c-2.738575,4.956842 2.116147,9.258014 -2.322696,12.812809c-0.04619,4.182435 10.300794,4.766891 4.508536,6.826444c3.969618,2.26717 12.4831,0.837151 13.351827,5.87257c-3.603656,2.986372 -8.657117,1.807822 -12.974981,2.086619c-1.4642,0.525586 -5.143632,-1.282441 -4.583515,1.375574c-0.2869,11.910616 2.649625,23.621696 5.489499,35.052451c0.003623,5.600286 13.112392,2.424956 5.82605,8.781114c-5.382179,4.881208 2.508843,11.71918 5.242583,16.061005c3.71852,4.762874 10.319168,7.173697 9.768249,14.164982c3.787784,0.287262 8.293178,6.499891 3.056171,8.047869c-28.343076,0.626425 -56.707451,1.057657 -85.055056,0.870032l0.000014,0z\" strokeOpacity=\"null\" strokeWidth=\"1.5\" fill={props.farbe.css} />\r\n        </g>\r\n    </svg>);\r\n}\r\n","import React from 'react';\r\nimport { Figur } from './Figur';\r\n\r\nexport class Brett extends React.Component {\r\n    render() {\r\n        const { hoehe, breite, spieler } = this.props;\r\n        const zeilen = [];\r\n        for (let zeile = 0; zeile < hoehe; zeile++) {\r\n            let spalten = [];\r\n            for (let spalte = 0; spalte < breite; spalte++) {\r\n                let gerade = zeile % 2 === 0;\r\n                let position = (breite * hoehe - 1) - (gerade ? spalte + (zeile * breite) : breite - 1 - spalte + (zeile * breite));\r\n                var borderRadius = '0 0 0 0';\r\n                var padding = '5px 0 5px 0';\r\n                if (spalte === 0 && gerade) { // Rundung unten links\r\n                    borderRadius = '0 0 0 20px';\r\n                    padding = '0 0 5px 0';\r\n                }\r\n                else if (gerade && spalte === breite - 1) { // Rundung oben rechts\r\n                    borderRadius = '0 20px 0 0';\r\n                    padding = '5px 0 0 0';\r\n                }\r\n                else if (!gerade && spalte === breite - 1) { // rundung unten rechts\r\n                    borderRadius = ' 0 0 20px 0';\r\n                    padding = '0 0 5px 0';\r\n                }\r\n                else if (spalte === 0) { // Rundung oben links\r\n                    borderRadius = '20px 0 0 0';\r\n                    padding = '5px 0 0 0';\r\n                }\r\n                spalten.push(<td key={spalte} style={{\r\n                    border: 0,\r\n                    padding: padding,\r\n                    width: 80,\r\n                    height: 80,\r\n                }}>\r\n                    <div style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        borderRadius: borderRadius,\r\n                        backgroundColor: 'yellow',\r\n                        textAlign: 'center',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                    }}>\r\n                        <h1>{position + 1}</h1>\r\n\r\n                        {spieler.filter(s => s.position === position).map(s =>\r\n                            <div key={s.id} style={{ position: 'absolute', marginTop: 15 * s.id - 10, }}>\r\n                                <Figur farbe={s.farbe}/>\r\n                            </div>)}\r\n                    </div>\r\n\r\n\r\n                </td>);\r\n            }\r\n            zeilen.push(<tr key={zeile}>{spalten}</tr>);\r\n        }\r\n        return (<table style={{ borderCollapse: 'collapse' }}>\r\n            <tbody>{zeilen}</tbody>\r\n        </table>);\r\n    }\r\n\r\n    \r\n}\r\n","import React from 'react';\r\nexport class Aktion extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ausgefuehrt: false,\r\n        };\r\n    }\r\n    aufdecken() {\r\n        const { aktion, aufdeckenFunktion, spielzugFunktion } = this.props;\r\n        const { ausgefuehrt } = this.state;\r\n        if (!aktion.aufgedeckt) {\r\n            this.setState({\r\n                ausgefuehrt: false\r\n            });\r\n            aufdeckenFunktion();\r\n            setTimeout(spielzugFunktion, 1500);\r\n        }\r\n        else if (!ausgefuehrt) {\r\n            spielzugFunktion();\r\n            this.setState({\r\n                ausgefuehrt: true\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const { aktion } = this.props;\r\n        return (<>\r\n            <svg height=\"100\" width=\"100\" onClick={this.aufdecken.bind(this)}>\r\n                <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" strokeWidth=\"2\" fill=\"red\" />\r\n                {aktion.aufgedeckt && aktion.logo}\r\n            </svg>\r\n        </>);\r\n    }\r\n}\r\n","\r\nexport const MSG = {\r\n\r\n    SPIELER_WELCHE_FARBE : (spieler) => `Spieler ${spieler.id+1}, welche Farbe möchtest du?`,\r\n    SPIELER_WELCHES_ALTER : (spieler) => `Spieler ${spieler.id+1}, wie alt bist du?`,\r\n    SPIELER_FARBE_IST_DRAN: (spieler) => `Spieler ${spieler.farbe.name}, du bist dran!`,\r\n    SPIELER_NUMMBER_IST_DRAN: (spieler) => `Spieler ${spieler.id}, du bist dran!`,\r\n    GEWINNER : `Du hast gewonnen!`,\r\n    KARTE_SCHON_AUFGEDECKT: `Karte schon aufgedeckt, wähle eine andere.`,\r\n};","import React from 'react';\r\n\r\nexport function FarbEingabe(props) {\r\n    const { spieler, farben, setzeSpielerFarbe } = props;\r\n    return (<div>Spieler {spieler.id + 1}, Welche Farbe möchtest du?<br />\r\n        {farben.map((farbe) => <svg key={farbe.css} height=\"100\" width=\"100\" onClick={() => setzeSpielerFarbe(spieler, farbe)}>\r\n            <circle cx=\"50\" cy=\"50\" r=\"30\" stroke=\"black\" strokeWidth=\"2\" fill={farbe.css} />\r\n        </svg>)}\r\n    </div>);\r\n}\r\n","import React from 'react';\r\nexport function AltersEingabe(props) {\r\n    const { spieler, zahlen, setzeSpielerAlter } = props;\r\n    return <div>Spieler {spieler.id + 1}, Wie alt bist du?<br />\r\n        {zahlen.map((zahl) => <svg key={zahl} height=\"100\" width=\"100\" onClick={() => setzeSpielerAlter(spieler, zahl)}>\r\n            <circle cx=\"50\" cy=\"50\" r=\"30\" stroke=\"black\" strokeWidth=\"2\" fill=\"white\" />\r\n            <text x=\"50%\" y=\"50%\" textAnchor=\"middle\">{zahl}</text>\r\n        </svg>)}\r\n    </div>;\r\n}\r\n","import React from 'react';\r\nexport function Gewinner(props) {\r\n    const { gewinner } = props;\r\n    return (<>\r\n        <h1>Ende!</h1>\r\n        Gewinner ist: <br />\r\n        <svg height=\"100\" width=\"100\">\r\n            <circle cx=\"50\" cy=\"50\" r=\"30\" stroke=\"black\" strokeWidth=\"2\" fill={gewinner.farbe.css} />\r\n            <text x=\"50%\" y=\"50%\" textAnchor=\"middle\">\r\n                Spieler {gewinner.id}\r\n            </text>\r\n        </svg>\r\n    </>);\r\n}\r\n","import React from 'react';\r\nexport function AktuellerSpieler(props) {\r\n    const { spieler } = props;\r\n    return (<>\r\n        Aktueller Spieler:<br />\r\n        <svg height=\"100\" width=\"100\">\r\n            <circle cx=\"50\" cy=\"50\" r=\"30\" stroke=\"black\" strokeWidth=\"2\" fill={spieler.farbe.css} />\r\n            <text x=\"50%\" y=\"50%\" textAnchor=\"middle\">\r\n                Spieler {spieler.id + 1}\r\n            </text>\r\n\r\n        </svg>\r\n    </>);\r\n}\r\n","import React from 'react';\r\nimport footprint from './footprint.svg';\r\nimport ladder from './ladder.svg';\r\nimport shuffleIcon from './shuffle.svg';\r\nimport hide from './hide.svg';\r\nimport { Brett } from './Brett';\r\nimport { Aktion } from './Aktion';\r\nimport { MSG } from './messages';\r\nimport Speech from 'speak-tts' // es6\r\nimport { FarbEingabe } from './FarbEingabe';\r\nimport { AltersEingabe } from './AltersEingabe';\r\nimport { Gewinner } from './Gewinner';\r\nimport { AktuellerSpieler } from './AktuellerSpieler';\r\n\r\nconst speech = new Speech() // will throw an exception if not browser supported\r\nif (speech.hasBrowserSupport()) { // returns a boolean\r\n    console.log(\"speech synthesis supported\")\r\n\r\n    speech.init().then((data) => {\r\n        // The \"data\" object contains the list of available voices and the voice synthesis params\r\n        console.log(\"Speech is ready, voices are available\", data)\r\n    }).catch(e => {\r\n        console.error(\"An error occured while initializing : \", e)\r\n    })\r\n}\r\n\r\nclass Spiel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            play: false,\r\n            gestartet: false,\r\n            anzahlSpieler: 3,\r\n            breite: 4,\r\n            hoehe: 6,\r\n            spieler: [],\r\n            aktionen: [],\r\n            aktuellerSpieler: 0,\r\n            gewinner: null,\r\n            aktuelleAktion: null,\r\n            vorleseText: '',\r\n        }\r\n        this.spielzug.bind(this);\r\n    }\r\n\r\n    starteSpiel() {\r\n        this.init();\r\n        let spieler = [];\r\n        for (let index = 0; index < this.state.anzahlSpieler; index++) {\r\n            spieler.push({\r\n                id: index,\r\n                position: 0,\r\n                farbe: null,\r\n                alter: null,\r\n            });\r\n        }\r\n        this.setState({\r\n            gestartet: false,\r\n            anzahlSpieler: this.state.anzahlSpieler,\r\n            spieler: spieler,\r\n        });\r\n    }\r\n\r\n    init() {\r\n        const shuffle = (a) => {\r\n            for (let i = a.length - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [a[i], a[j]] = [a[j], a[i]];\r\n            }\r\n            return a;\r\n        }\r\n\r\n        const leiterSprosse = (position, breite) => {\r\n            return 2 * breite - 1 - (2 * (position % breite)) + position;\r\n        }\r\n\r\n        let einSchritt = {\r\n            name: 'einSchritt',\r\n            logo: <image x=\"35\" y=\"30\" width=\"40\" height=\"40\" xlinkHref={footprint} />,\r\n            schrittAktion: position => position + 1,\r\n            boardAktion: () => { },\r\n            aufgedeckt: false,\r\n        };\r\n\r\n        let zweiSchritte = {\r\n            name: 'zweiSchritte',\r\n            logo: <>\r\n                <image x=\"15\" y=\"30\" width=\"40\" height=\"40\" xlinkHref={footprint} />\r\n                <image x=\"45\" y=\"30\" width=\"40\" height=\"40\" xlinkHref={footprint} />\r\n            </>,\r\n            schrittAktion: position => position + 2,\r\n            boardAktion: () => { },\r\n            aufgedeckt: false,\r\n        };\r\n\r\n        let mischen = {\r\n            name: 'mischen',\r\n            logo: <image x=\"35\" y=\"30\" width=\"40\" height=\"40\" xlinkHref={shuffleIcon} />,\r\n            schrittAktion: position => position,\r\n            boardAktion: () => {\r\n                aktionen.forEach(aktion => { aktion.aufgedeckt = false; });\r\n                this.setState({ aktionen: shuffle(aktionen) });\r\n            },\r\n            aufgedeckt: false,\r\n        };\r\n\r\n        let zudecken = {\r\n            name: 'zudecken',\r\n            logo: <image x=\"35\" y=\"30\" width=\"40\" height=\"40\" xlinkHref={hide} />,\r\n            schrittAktion: position => position,\r\n            boardAktion: () => {\r\n                aktionen.forEach(aktion => { aktion.aufgedeckt = false; });\r\n            },\r\n            aufgedeckt: false,\r\n        };\r\n\r\n\r\n\r\n        let leiter1 = {\r\n            name: 'Leiter - 3 Sprossen',\r\n            logo: <><image x=\"15\" y=\"30\" width=\"40\" height=\"40\" xlinkHref={ladder} />\r\n                <image x=\"45\" y=\"30\" width=\"40\" height=\"40\" xlinkHref={ladder} /></>,\r\n            schrittAktion: (position, breite) => leiterSprosse(leiterSprosse(leiterSprosse(position, breite), breite), breite),\r\n            boardAktion: () => { },\r\n            aufgedeckt: false,\r\n        };\r\n\r\n        let leiter2 = {\r\n            name: 'Leiter - 2 Sprossen',\r\n            logo: <image x=\"30\" y=\"30\" width=\"40\" height=\"40\" xlinkHref={ladder} />,\r\n            schrittAktion: (position, breite) => leiterSprosse(leiterSprosse(position, breite), breite),\r\n            boardAktion: () => { },\r\n            aufgedeckt: false,\r\n        };\r\n\r\n        let aktionen = [einSchritt, zweiSchritte, mischen, zudecken, leiter1, leiter2];\r\n\r\n        let farben = [\r\n            { css: 'red', name: 'rot' },\r\n            { css: 'blue', name: 'blau' },\r\n            { css: 'yellow', name: 'gelb' },\r\n            { css: 'magenta', name: 'rosa' },\r\n            { css: 'green', name: 'grün' },\r\n            { css: 'orange', name: 'orange' },\r\n        ];\r\n\r\n        this.setState({\r\n            gestartet: false,\r\n            gewinner: null,\r\n            aktionen: aktionen,\r\n            aktuellerSpieler: 0,\r\n            aktuelleAktion: null,\r\n            farben: farben,\r\n            spieler: [],\r\n        });\r\n    }\r\n\r\n    ermittleGewinner() {\r\n        let spieler = this.state.spieler;\r\n        let gewinnerFeld = this.state.breite * this.state.hoehe;\r\n        for (let index = 0; index < spieler.length; index++) {\r\n            if (spieler[index].position >= gewinnerFeld) {\r\n                return spieler[index];\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    spielzug(aktion) {\r\n\r\n        const { aktuellerSpieler, breite, anzahlSpieler, aktuelleAktion } = this.state;\r\n\r\n        if (aktion !== aktuelleAktion) {\r\n            console.log('falsche Aktion');\r\n            this.say(MSG.KARTE_SCHON_AUFGEDECKT);\r\n            return;\r\n        }\r\n\r\n        var spieler = this.state.spieler[aktuellerSpieler];\r\n\r\n        console.log(\"spieler \" + spieler.id + \" spielt mit Aktion \" + aktion.name);\r\n\r\n        const positionVorher = spieler.position;\r\n\r\n        spieler.position = aktion.schrittAktion(spieler.position, breite);\r\n\r\n        this.say(aktion.name);\r\n\r\n        console.log(\"spieler \" + spieler.id + \" springt von \" + positionVorher + \" auf Position \" + spieler.position);\r\n\r\n        let gewinner = this.ermittleGewinner();\r\n        if (!gewinner) {\r\n\r\n            aktion.boardAktion();\r\n\r\n            // nächster Spieler\r\n            if (this.state.anzahlSpieler > 1) {\r\n                const naechsterSpielerId = (aktuellerSpieler + 1) % anzahlSpieler;\r\n                this.say(MSG.SPIELER_FARBE_IST_DRAN(this.state.spieler[naechsterSpielerId]), true);\r\n                this.setState({\r\n                    aktuellerSpieler: naechsterSpielerId,\r\n                    aktuelleAktion: null\r\n                });\r\n            } else {\r\n                this.setState({ aktuellerSpieler: 0, aktuelleAktion: null });\r\n            }\r\n        }\r\n        else {\r\n            this.setState({ gewinner: gewinner }, () => {\r\n                this.say(MSG.GEWINNER);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    aufdecken(aktion) {\r\n        if (aktion.aufgedeckt) {\r\n            console.log('aktuelleAktion schon aufgedeckt.');\r\n            return;\r\n        }\r\n        if (this.state.aktuelleAktion) {\r\n            console.log('aktuelleAktion gesetzt. Aufdecken nicht erlaubt');\r\n            return;\r\n        }\r\n        let tmp = [...this.state.aktionen];\r\n        tmp.forEach(a => { if (a === aktion) aktion.aufgedeckt = true; })\r\n        this.setState({\r\n            aktionen: tmp,\r\n            aktuelleAktion: aktion\r\n        });\r\n    }\r\n\r\n    say(msg, queue) {\r\n        speech.speak({\r\n            text: msg,\r\n            queue: queue | false // current speech will be interrupted,\r\n        });\r\n    }\r\n\r\n    spielerDatenEingegeben() {\r\n        for (let index = 0; index < this.state.spieler.length; index++) {\r\n            const element = this.state.spieler[index];\r\n            if (!element.farbe) {\r\n                this.say(MSG.SPIELER_WELCHE_FARBE(element));\r\n                return element;\r\n            } else if (!element.alter) {\r\n                this.say(MSG.SPIELER_WELCHES_ALTER(element));\r\n                return element;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setzeSpielerFarbe(spielerMitEingabe, farbe) {\r\n        const { spieler, farben } = this.state;\r\n        spielerMitEingabe.farbe = farbe;\r\n        spieler[spieler.indexOf(spielerMitEingabe)] = spielerMitEingabe;\r\n        this.say(farbe.name);\r\n        this.setState({\r\n            spieler: spieler,\r\n            farben: farben.filter(item => item !== farbe)\r\n        }, this.starten);\r\n    }\r\n\r\n    setzeSpielerAlter(spielerMitEingabe, alter) {\r\n        const { spieler } = this.state;\r\n        spielerMitEingabe.alter = alter;\r\n        this.setState({\r\n            spieler: spieler,\r\n        }, this.starten);\r\n    }\r\n\r\n    starten() {\r\n        const fehlenNochEingaben = this.spielerDatenEingegeben();\r\n        if (!fehlenNochEingaben) {\r\n            this.say(MSG.SPIELER_FARBE_IST_DRAN(this.state.spieler[this.state.aktuellerSpieler]))\r\n            this.setState({ gestartet: true });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const { play, anzahlSpieler, breite, hoehe, spieler, aktionen, farben, gestartet, aktuellerSpieler } = this.state;\r\n\r\n        const aktionenListe = <div>\r\n            {aktionen.map(aktion =>\r\n                <Aktion key={aktion.name} aktion={aktion} spielzugFunktion={() => this.spielzug(aktion)} aufdeckenFunktion={() => this.aufdecken(aktion)} />\r\n            )}\r\n        </div>\r\n\r\n        const spielerMitEingabe = this.spielerDatenEingegeben();\r\n\r\n        const zahlen = [...Array(10).keys()].slice(3, 10);\r\n        \r\n        if(play && !gestartet && spieler.length === 0){\r\n            this.say('Hallo, wieviele Spieler seid ihr?');\r\n        }\r\n\r\n        return (<>\r\n\r\n            {!play &&\r\n                <svg height=\"100\" width=\"100\" onClick={() => this.setState({ play: true })}>\r\n                    <circle cx=\"50\" cy=\"50\" r=\"30\" stroke=\"black\" strokeWidth=\"2\" fill=\"white\" />\r\n                    <text x=\"54%\" y=\"50%\" textAnchor=\"middle\" alignmentBaseline=\"middle\" fontSize=\"10vh\">&#9654;</text>\r\n                </svg>\r\n            }\r\n\r\n            {play && !gestartet && spieler.length === 0 && (\r\n                <div>\r\n                    Hallo, wieviele Spieler?<br />\r\n                    <input value={anzahlSpieler} name=\"anzahlSpieler\" onChange={(event) =>\r\n                        this.setState({ anzahlSpieler: event.target.value })} />\r\n                    <input type=\"button\" defaultValue=\"Start\"\r\n                        onClick={this.starteSpiel.bind(this)} /></div>)}\r\n\r\n            {spieler.length > 0 && spielerMitEingabe && !spielerMitEingabe.farbe &&\r\n                <FarbEingabe spieler={spielerMitEingabe} farben={farben} setzeSpielerFarbe={this.setzeSpielerFarbe.bind(this)} />\r\n            }\r\n\r\n            {spieler.length > 0 && spielerMitEingabe && spielerMitEingabe.farbe && !spielerMitEingabe.alter &&\r\n                <AltersEingabe spieler={spielerMitEingabe} zahlen={zahlen} setzeSpielerAlter={this.setzeSpielerAlter.bind(this)} />\r\n            }\r\n\r\n            {this.state.gestartet && <>\r\n                <div>\r\n                    <table style={{ marginLeft: 'auto', marginRight: 'auto' }}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"50%\">\r\n                                    {!this.state.gewinner &&\r\n                                        <AktuellerSpieler spieler={spieler[aktuellerSpieler]} />\r\n                                    }\r\n\r\n                                    {this.state.gewinner && <Gewinner gewinner={spieler[this.state.gewinner.id]}/>}\r\n\r\n                                    <br />\r\n\r\n                                    {aktionenListe}</td>\r\n                                <td width=\"50%\"><Brett hoehe={hoehe} breite={breite} spieler={spieler} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <p>\r\n                        <input type=\"button\" defaultValue=\"Neues Spiel\" onClick={this.init.bind(this)} />\r\n                    </p>\r\n                </div>\r\n            </>\r\n            }\r\n        </>)\r\n\r\n\r\n    }\r\n}\r\nexport default Spiel;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Spiel from './Spiel';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />   \r\n      </header>\r\n      <main>\r\n        <Spiel/>      \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}